name: N1-OpenWrt-CI

#on:
  #schedule:
    #- cron: '0 22 * * *'
  #repository_dispatch:
    #types: run
    
env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: [ubuntu-18.04]
    if: github.event_name == 'schedule' || github.event.action == 'run'

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Install depends
        run: |
          sudo swapoff /swapfile
          sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /usr/lib/jvm /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

      - name: Clone Lean's openwrt
        run: |
          git clone https://github.com/coolsnowwolf/lede

      - name: Install feeds
        run: |
          cd lede
          
          git clone https://github.com/tuanqing/lede-mod
          git clone https://github.com/tuanqing/install-program package/install-program
          svn co https://github.com/Lienol/openwrt-package/trunk/lienol/luci-theme-bootstrap-mod package/luci-theme-bootstrap-mod

          git apply lede-mod/lede/*.patch
          
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
          git apply lede-mod/luci/*.patch --directory=feeds/luci
          git apply lede-mod/bootstrap/*.patch --directory=package/luci-theme-bootstrap-mod

      - name: Make config
        run: |
          cd lede

          cat > .config << EOF
          CONFIG_TARGET_armvirt=y
          CONFIG_TARGET_armvirt_64=y
          CONFIG_TARGET_armvirt_64_Default=y
          CONFIG_NFS_KERNEL_SERVER_V4=y
          CONFIG_PACKAGE_SAMBA_MAX_DEBUG_LEVEL=-1
          CONFIG_PACKAGE_blkid=y
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-chrono=y
          CONFIG_PACKAGE_boost-random=y
          CONFIG_PACKAGE_boost-system=y
          CONFIG_PACKAGE_btrfs-progs=y
          CONFIG_PACKAGE_cgroupfs-mount=y
          CONFIG_PACKAGE_containerd=y
          CONFIG_PACKAGE_docker-ce=y
          CONFIG_PACKAGE_e2fsprogs=y
          CONFIG_PACKAGE_fdisk=y
          CONFIG_PACKAGE_icu=y
          CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
          CONFIG_PACKAGE_iptables-mod-extra=y
          CONFIG_PACKAGE_iptables-mod-ipopt=y
          CONFIG_PACKAGE_iwinfo=y
          CONFIG_PACKAGE_kmod-br-netfilter=y
          CONFIG_PACKAGE_kmod-crypto-cbc=y
          CONFIG_PACKAGE_kmod-crypto-crc32c=y
          CONFIG_PACKAGE_kmod-crypto-cts=y
          CONFIG_PACKAGE_kmod-crypto-des=y
          CONFIG_PACKAGE_kmod-crypto-hmac=y
          CONFIG_PACKAGE_kmod-crypto-md5=y
          CONFIG_PACKAGE_kmod-dax=y
          CONFIG_PACKAGE_kmod-dm=y
          CONFIG_PACKAGE_kmod-dnsresolver=y
          CONFIG_PACKAGE_kmod-fs-exportfs=y
          CONFIG_PACKAGE_kmod-fs-nfs=y
          CONFIG_PACKAGE_kmod-fs-nfs-common=y
          CONFIG_PACKAGE_kmod-fs-nfs-common-rpcsec=y
          CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          CONFIG_PACKAGE_kmod-fs-nfsd=y
          CONFIG_PACKAGE_kmod-ikconfig=y
          CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
          CONFIG_PACKAGE_kmod-ipt-extra=y
          CONFIG_PACKAGE_kmod-ipt-ipopt=y
          CONFIG_PACKAGE_kmod-lib-crc32c=y
          CONFIG_PACKAGE_kmod-nf-ipvs=y
          CONFIG_PACKAGE_kmod-tun=y
          CONFIG_PACKAGE_kmod-veth=y
          CONFIG_PACKAGE_libattr=y
          CONFIG_PACKAGE_libblkid=y
          CONFIG_PACKAGE_libbz2=y
          CONFIG_PACKAGE_libcap=y
          CONFIG_PACKAGE_libcomerr=y
          CONFIG_PACKAGE_libdb47=y
          CONFIG_PACKAGE_libdevmapper=y
          CONFIG_PACKAGE_libdouble-conversion=y
          CONFIG_PACKAGE_libext2fs=y
          CONFIG_PACKAGE_libext2fs=y
          CONFIG_PACKAGE_libfdisk=y
          CONFIG_PACKAGE_libffi=y
          CONFIG_PACKAGE_libgdbm=y
          CONFIG_PACKAGE_libkeyutils=y
          CONFIG_PACKAGE_liblzma=y
          CONFIG_PACKAGE_liblzo=y
          CONFIG_PACKAGE_libminiupnpc=y
          CONFIG_PACKAGE_libmount=y
          CONFIG_PACKAGE_libnatpmp=y
          CONFIG_PACKAGE_libncurses=y
          CONFIG_PACKAGE_libnetwork=y
          CONFIG_PACKAGE_libpcre2-16=y
          CONFIG_PACKAGE_libreadline=y
          CONFIG_PACKAGE_libsmartcols=y
          CONFIG_PACKAGE_libsqlite3=y
          CONFIG_PACKAGE_libss=y
          CONFIG_PACKAGE_libtirpc=y
          CONFIG_PACKAGE_libwebsockets-full=y
          CONFIG_PACKAGE_libwrap=y
          CONFIG_PACKAGE_libxml2=y
          CONFIG_PACKAGE_libzstd=y
          CONFIG_PACKAGE_luci-app-diskman=y
          CONFIG_PACKAGE_luci-app-docker=y
          CONFIG_PACKAGE_luci-app-mwan3=y
          CONFIG_PACKAGE_luci-app-nfs=y
          CONFIG_PACKAGE_luci-app-qbittorrent=y
          CONFIG_PACKAGE_luci-app-samba=y
          CONFIG_PACKAGE_luci-app-travelmate=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-app-zerotier=y
          CONFIG_PACKAGE_luci-i18n-docker-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-mwan3-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-nfs-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-qbittorrent-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-samba-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-ttyd-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-zerotier-zh-cn=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-material=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          CONFIG_PACKAGE_mount-utils=y
          CONFIG_PACKAGE_mwan3=y
          CONFIG_PACKAGE_nfs-kernel-server=y
          CONFIG_PACKAGE_nfs-kernel-server-utils=y
          CONFIG_PACKAGE_nfs-utils=y
          CONFIG_PACKAGE_nfs-utils-libs=y
          CONFIG_PACKAGE_parted=y
          CONFIG_PACKAGE_python3=y
          CONFIG_PACKAGE_python3-asyncio=y
          CONFIG_PACKAGE_python3-base=y
          CONFIG_PACKAGE_python3-cgi=y
          CONFIG_PACKAGE_python3-cgitb=y
          CONFIG_PACKAGE_python3-codecs=y
          CONFIG_PACKAGE_python3-ctypes=y
          CONFIG_PACKAGE_python3-dbm=y
          CONFIG_PACKAGE_python3-decimal=y
          CONFIG_PACKAGE_python3-distutils=y
          CONFIG_PACKAGE_python3-email=y
          CONFIG_PACKAGE_python3-gdbm=y
          CONFIG_PACKAGE_python3-light=y
          CONFIG_PACKAGE_python3-logging=y
          CONFIG_PACKAGE_python3-lzma=y
          CONFIG_PACKAGE_python3-multiprocessing=y
          CONFIG_PACKAGE_python3-ncurses=y
          CONFIG_PACKAGE_python3-openssl=y
          CONFIG_PACKAGE_python3-pydoc=y
          CONFIG_PACKAGE_python3-sqlite3=y
          CONFIG_PACKAGE_python3-unittest=y
          CONFIG_PACKAGE_python3-urllib=y
          CONFIG_PACKAGE_python3-xml=y
          CONFIG_PACKAGE_qBittorrent=y
          CONFIG_PACKAGE_qt5-core=y
          CONFIG_PACKAGE_qt5-network=y
          CONFIG_PACKAGE_qt5-xml=y
          CONFIG_PACKAGE_rblibtorrent=y
          CONFIG_PACKAGE_rpcbind=y
          CONFIG_PACKAGE_runc=y
          CONFIG_PACKAGE_samba36-server=y
          CONFIG_PACKAGE_smartmontools=y
          CONFIG_PACKAGE_terminfo=y
          CONFIG_PACKAGE_tini=y
          CONFIG_PACKAGE_travelmate=y
          CONFIG_PACKAGE_ttyd=y
          CONFIG_PACKAGE_uclibcxx=y
          CONFIG_PACKAGE_zerotier=y
          CONFIG_RPCBIND_LIBWRAP=y
          CONFIG_RPCBIND_RMTCALLS=y
          CONFIG_SQLITE_FTS3=y
          CONFIG_SQLITE_RTREE=y
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y
          EOF

          make defconfig
          ./scripts/feeds update -a
          cat .config

      - name: Compile openwrt
        run: |
          cd lede
          make download -j8
          make -j$(nproc) || make -j1 V=s

      - name: Build firmware
        run: |
          cp lede/bin/targets/*/*/*.tar.gz ./openwrt
          sudo ./make -d
          cp lede/.config out/config.seed

          cd out
          i=0
          kernels=("4.18.7" "4.19.106" "5.4.20")
          for x in ${kernels[*]}; do
            cd $x
            filename=$(ls)
            filename=${filename%.*}
            gzip *.img
            cd ../
            echo "::set-env name=firmware_$((++i))::$filename"
          done

      - name: Upload firmware @ kernel 4.18.7
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.firmware_1 }}
          path: out/4.18.7
      
      - name: Upload firmware @ kernel 4.19.106
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.firmware_2 }}
          path: out/4.19.106
      
      - name: Upload firmware @ kernel 5.4.20
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.firmware_3 }}
          path: out/5.4.20

      - name: Upload config file
        uses: actions/upload-artifact@master
        with:
          name: config
          path: out/config.seed
